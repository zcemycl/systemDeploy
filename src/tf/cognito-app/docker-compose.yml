version: "3.9"
networks:
  net:
    driver: bridge
services:
  # terraform:
  #   image: hashicorp/terraform:latest
  #   volumes:
  #     - ./infrastructure:/infra
  #   working_dir: /infra
  #   command:
  #     - init
  #   environment:
  #     - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
  #     - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
  #     - AWS_SESSION_TOKEN=${AWS_SESSION_TOKEN}
  db:
    build:
      context: database
      dockerfile: Dockerfile.pgvector
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DATABASE=postgres
    # volumes:
    #   - "./src/sql/init.sql:/docker-entrypoint-initdb.d/"
    ports:
      - "5432:5432"
    networks:
      - net
    # depends_on:
    #   - terraform
  api:
    build:
      context: backend
      dockerfile: Dockerfile
    # command: bash -c "alembic -n local upgrade head && uvicorn app.main:app --host 0.0.0.0 --port 80"
    environment:
      WITHIN_DOCKER_ENV: 1
      DB_URL: "postgresql://postgres:postgres@db/postgres"
      PGHOST: db
      PGUSER: postgres
      PGPASSWORD: postgres
      PGDATABASE: postgres
    ports:
      - 4555:80
    networks:
      - net
    depends_on:
      - db

  app:
    build:
      context: frontend
      dockerfile: Dockerfile
    environment:
      NODE_ENV: dev
    ports:
      - 4556:3000
    networks:
      - net
    depends_on:
      - db
      - api
